name: Publish

permissions: write-all

on:
    workflow_dispatch:

    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
      images_dir: /opt/images    

jobs:
    publish:
        # To enable auto publishing to github, update your electron publisher
        # config in package.json > "build" and remove the conditional below
        # if: ${{ github.repository_owner == 'electron-react-boilerplate' }}

        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]
                # os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - name: Checkout git repo
              uses: actions/checkout@v4

            - name: Install Node and NPM
              uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: npm

            - name: Install and build
              run: |
                  npm install
                  if [ "$RUNNER_OS" == "macOS" ]; then
                    npm install dmg-license
                  fi
                  npm run postinstall
                  npm run build
              shell: bash

            - name: Publish releases
              env:
                  # These values are used for auto updates signing
                  #   APPLE_ID: ${{ secrets.APPLE_ID }}
                  #   APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_PASS }}
                  #   CSC_LINK: ${{ secrets.CSC_LINK }}
                  #   CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
                  # This is used for uploading release assets to github
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  npm exec electron-builder -- --publish always

              env:
              build_variant: ${{ matrix.build_variant }}
              targets: ${{ matrix.targets }}
              images_dir: /opt/images
      
            - name: Create archive
              if: ${{ github.event_name != 'release' && success() }}
              run: |
                  ls -lh ${images_dir}
                  GIT_VERSION=`git rev-parse --short=7 HEAD 2>/dev/null` && [ -n "$GIT_VERSION" ] && \
                  image_name=images_${build_variant}_${GIT_VERSION} || image_name=images_${build_variant}
                  cd ${images_dir}; md5sum *.trx |tee md5sum.txt; 7z a -mx=9 ${image_name}.7z ./*
                  echo "image_name=${image_name}" >> $GITHUB_ENV
            - name: Upload images to Artifact
              if: ${{ github.event_name != 'release' && success() }}
              uses: actions/upload-artifact@v2.2.1
              with:
              name: ${{ env.image_name }}
              path: ${{ env.images_dir }}/*.7z
            - name: Upload images to Releases
              if: ${{ github.event_name == 'release' && success() }}
              uses: svenstaro/upload-release-action@2.2.0
              with:
              repo_token: ${{ secrets.GITHUB_TOKEN }}
              file: ${{ env.images_dir }}/*.trx
              tag: ${{ github.ref }}
              overwrite: true
              file_glob: true
