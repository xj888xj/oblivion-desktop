name: webpack

permissions: write-all

on:
    workflow_dispatch:    #手动触发开始编译
    
    watch:                #点☆Star触发开始编译
      types: started

jobs:
    publish:
        # To enable auto publishing to github, update your electron publisher
        # config in package.json > "build" and remove the conditional below
        # if: ${{ github.repository_owner == 'electron-react-boilerplate' }}

        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest]
                # os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - name: Checkout git repo
              uses: actions/checkout@v4

            - name: Install Node and NPM
              uses: actions/setup-node@v4
              with:
                  node-version: 18
                  cache: npm

            - name: Install and build
              run: |
                  npm install
                  if [ "$RUNNER_OS" == "macOS" ]; then
                    npm install dmg-license
                  fi
                  npm run postinstall
                  npm run build
              shell: bash

            - name: Publish releases
              env:
                  # These values are used for auto updates signing
                  #   APPLE_ID: ${{ secrets.APPLE_ID }}
                  #   APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_ID_PASS }}
                  #   CSC_LINK: ${{ secrets.CSC_LINK }}
                  #   CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
                  # This is used for uploading release assets to github
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  npm exec electron-builder -- --publish always



            - name: Upload firmware directory
              uses: actions/upload-artifact@main
              with:
                name: ${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
                path: ${{ env.FIRMWARE }}


            - name: 上传固件在github空间
              uses: actions/upload-artifact@v2
              with:
                name: ${{matrix.target}}_${{ env.date }}
                path: ${{ env.FIRMWARE }}

            - name: 上传固件到「奶牛快传」和「wetransfer」
              run: |
                curl -fsSL git.io/file-transfer | sh
                ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
                echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
                curl -fsSL git.io/file-transfer | sh
                ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
                echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
            
            - name: 提取发布用的「奶牛快传」跟「WeTransfer」的链接
              run: |
                curl -fsSL git.io/file-transfer | sh
                ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
                echo "::set-env name=COWTRANSFER_URL::$(cat cowtransfer.log | grep https | cut -f3 -d" ")" 
                curl -fsSL git.io/file-transfer | sh
                ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
                echo "::set-env name=WETRANSFER_URL::$(cat wetransfer.log | grep https | cut -f3 -d" ")"    
